@model Sokool.Net.Web.Models.UserModel

@{
    ViewBag.Title = "User Sign Up";
}

<h2>User Sign Up</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="text-nowrap" >
        <h4>Sign up for our online account</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => Model.UserId, htmlAttributes: new { @class = ".col-form-label col-md-2 h5" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => Model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.FirstName, htmlAttributes: new { @class = ".col-form-label col-md-2 h5" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => Model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.LastName, htmlAttributes: new { @class = ".col-form-label col-md-2 h5" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => Model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.EmailAddress, htmlAttributes: new { @class = ".col-form-label col-md-2 h5" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => Model.EmailAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.ConfirmEmail, htmlAttributes: new { @class = ".col-form-label col-md-2 h5" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.ConfirmEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => Model.ConfirmEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.Password, htmlAttributes: new { @class = ".col-form-label col-md-2 h5" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => Model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.ConfirmPassword, htmlAttributes: new { @class = ".col-form-label col-md-2 h5" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => Model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div class="">
    @Html.ActionLink("Back to Home", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
